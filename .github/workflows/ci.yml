name: CI

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
permissions:
  # Required: allow read access to the content for analysis.
  contents: read
  # Optional: allow read access to pull requests. Use with `only-new-issues` option.
  pull-requests: read
  # Required: allow writing check results and annotations
  checks: write
  # Required: allow updating commit statuses
  statuses: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

env:
  GOMAXPROCS: 8

jobs:
  test-go:
    name: Test Go
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        runner: [ubuntu-latest, windows-latest, darwin-latest]
        go-version: ['1.25.0']
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          submodules: true
      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: '24'

      - name: Setup Go
        uses: ./.github/actions/setup-go
        with:
          go-version: ${{ matrix.go-version }}
          cache-name: test-go
      - name: Unit Test
        run: |
          go test -parallel 8 ./internal/...
  lint:
    name: Lint&Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          submodules: true

      - name: Setup Node.js
        uses: ./.github/actions/setup-node

      - name: Setup Go
        uses: ./.github/actions/setup-go
        with:
          go-version: 1.25.0
          cache-name: go-lint

      - name: go vet
        run: npm run lint:go

      - name: go fmt
        run: npm run format:go

      - name: Check Spell
        run: pnpm check-spell

  test-node:
    name: Test npm packages
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        go-version: ['1.25.0']
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          submodules: true

      - name: Setup Go
        uses: ./.github/actions/setup-go
        with:
          go-version: ${{ matrix.go-version }}
          cache-name: test-node

      - name: Setup Node.js
        uses: ./.github/actions/setup-node

      - name: Format
        if: runner.os == 'Linux'
        run: pnpm format:check

      - name: Build
        run: pnpm run build

      - name: Dogfooding
        if: runner.os == 'Linux'
        run: pnpm run lint --format github

      - name: TypeCheck
        if: runner.os == 'Linux'
        run: pnpm typecheck

      - name: VSCode Test Cache
        uses: lynx-infra/cache@5c6160a6a4c7fca80a2f3057bb9dfc9513fcb732
        with:
          path: packages/vscode-extension/.vscode-test
          key: vscode-test-${{ matrix.os }}
          restore-keys: |
            vscode-test-${{ matrix.os }}-

      - name: Test
        run: pnpm run test

  test-wasm:
    name: Test WASM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          submodules: true

      - name: Setup Go
        uses: ./.github/actions/setup-go
        with:
          go-version: 1.25.0
          cache-name: test-wasm

      - name: Setup Node.js
        uses: ./.github/actions/setup-node

      - name: Build
        run: |
          pnpm --filter '@rslint/core' build:js
          pnpm --filter '@rslint/wasm' build
  website:
    name: Build Website
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          submodules: true

      - name: Setup Node.js
        uses: ./.github/actions/setup-node

      - name: Build
        run: pnpm run build:website
  done:
    needs:
      - test-go
      - test-node
      - lint
      - test-wasm
      - website
    if: always()
    runs-on: ubuntu-latest
    name: CI Done
    steps:
      - run: exit 1
        if: ${{ always() && (contains(needs.*.result, 'failure') || contains(needs.*.result, 'skipped') || contains(needs.*.result, 'cancelled')) }}
